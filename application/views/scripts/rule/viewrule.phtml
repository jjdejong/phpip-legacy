<style type="text/css">
select {
	width: 150px;
}

#edit-rule-content {
	width: 98%;
	background: #FFF;
	display: block;
	border: 1px inset #888;
	padding: 5px;
}

#edit-rule-content label {
	display: inline-block;
	text-align: left;
	width: 100px;
	margin: 0px 5px 5px 5px;
	vertical-align: top;
}

.rule-input-wide {
	display: inline-block;
	width: 255px;
	border: 1px solid #FFF;
	background: #FFF;
	padding: 1px 2px;
	vertical-align: top;
	margin-bottom: 3px;
	min-height: 16px;
}

.rule-input-narrow {
	display: inline-block;
	width: 125px;
	border: 1px solid #FFF;
	background: #FFF;
	padding: 1px 2px;
	vertical-align: top;
	margin-bottom: 3px;
	min-height: 16px;
}

.teditable {
	min-height: 32px;
}

.close-button {
	background: #f00;
	float: right;
	padding: 2px 4px 0px;
	cursor: pointer;
	font-family: arial;
}

#edit-rule-head {
	display: block;
	width: 98%;
	background: #1E4262;
	color: #FFF;
	padding: 5px;
	border: 1px solid #1E4262;
}

.validation-errors {
	color: #F00;
	padding: 5px;
}

#valid-error {
	display: block;
	margin: 0px 0px 5px 10px;
}

.rule-info-set {
	background: #EFEFEF;
	border: 1px inset #888;
}

input {
	border: 0px;
}

</style>
<script type="text/javascript">
$(document).ready(function(){
    $.editable.addInputType('autocomplete', {
		element: $.editable.types.text.element,
		plugin: function(settings, original){
			$('input', this).autocomplete(settings.autocomplete);
		}
    });

    $('.editable').editable('/rule/update', {
                submitdata: function(value,settings){
                        var rule_id = $('#rule-id').val();
                        var field_name = $(this).attr('id');
                        return { rule_id : rule_id , field : field_name}
                },
                placeholder: '',
                select : true,
                indicator : '<span class="icon-busy" />',
                tooltip: 'Click to edit...',
                data: function(value, settings){
                        return $("<div/>").html(value).text();
                }
    });
    
    $('.teditable').editable('/rule/update', {
                submitdata: function(value,settings){
                        var rule_id = $('#rule-id').val();
                        var field_name = $(this).attr('id');
                        return { rule_id : rule_id , field : field_name  }
                },
                type: 'textarea',
                placeholder: '',
                select : true,
                indicator : '<span class="icon-busy" />',
                tooltip: 'Click to edit...',
                submit: 'ok',
                cancel: 'cancel',
                data: function(value, settings){
                        var tval = value.replace(/(<br>)*/g, '');
                        return $("<div/>").html(tval).text();
                }
    });
    
    $('.country-editable').editable('/rule/update', {
        type: 'autocomplete',
        autocomplete: {
			minLength: 1,
			source: "/matter/get-country-codes",
			select: function( event, ui ) {
       			this.value = ui.item.value;  // assign country name back to the form element
				fvalue = ui.item.id; // Country code
				dvalue = ui.item.value;
        		$(event.target.form).submit(); //submit the form
			}
        },
        submitdata: function(value, settings){
			var field_name = $(this).attr('id');
			return { 
				rule_id: $('#rule-id').val(), 
				field: field_name,
				value: fvalue,
				dvalue: dvalue 
			}
		},
		callback : function(value, settings) { // Reset variables after submission
			fvalue = '';
			dvalue = '';
		},
		id: 'field', // the object id is the form field name
		placeholder: '',
		indicator: '<span class="icon-busy" />',
		tooltip: 'Click to edit...',
		select: true
    });

    $('.category-editable').editable('/rule/update', {
        type: 'autocomplete',
        autocomplete: {
                        minLength: 1,
                        source: "/matter/get-all-categories",
                        select: function( event, ui ) {
                        this.value = ui.item.value;  // assign category name back to the form element
                                fvalue = ui.item.id; // Category code
                                dvalue = ui.item.value;
                        $(event.target.form).submit(); //submit the form
                        }
        },
        submitdata: function(value, settings){
                        var field_name = $(this).attr('id');
                        return { 
                                rule_id: $('#rule-id').val(), 
                                field: field_name,
                                value: fvalue,
                                dvalue: dvalue 
                        }
                },
                callback : function(value, settings) { // Reset variables after submission
                        fvalue = '';
                        dvalue = '';
                },
                id: 'field', // the object id is the form field name
                placeholder: '',
                indicator: '<span class="icon-busy" />',
                tooltip: 'Click to edit...',
                select: true
    });

    $('.type-editable').editable('/rule/update', {
        type: 'autocomplete',
        autocomplete: {
                        minLength: 1,
                        source: "/matter/get-matter-types",
                        select: function( event, ui ) {
                        this.value = ui.item.value;  // assign category name back to the form element
                                fvalue = ui.item.id; // Category code
                                dvalue = ui.item.value;
                        $(event.target.form).submit(); //submit the form
                        }
        },
        submitdata: function(value, settings){
                        var field_name = $(this).attr('id');
                        return { 
                                rule_id: $('#rule-id').val(), 
                                field: field_name,
                                value: fvalue,
                                dvalue: dvalue 
                        }
                },
                callback : function(value, settings) { // Reset variables after submission
                        fvalue = '';
                        dvalue = '';
                },
                id: 'field', // the object id is the form field name
                placeholder: '',
                indicator: '<span class="icon-busy" />',
                tooltip: 'Click to edit...',
                select: true
    });

    $('.task-editable').editable('/rule/update', {
        type: 'autocomplete',
        autocomplete: {
                        minLength: 1,
                        source: "/rule/get-task-names",
                        select: function( event, ui ) {
                        this.value = ui.item.value;  // assign task name back to the form element
                                fvalue = ui.item.id; // Task code
                                dvalue = ui.item.value;
                        $(event.target.form).submit(); //submit the form
                        }
        },
        submitdata: function(value, settings){
                        var field_name = $(this).attr('id');
                        return { 
                                rule_id: $('#rule-id').val(), 
                                field: field_name,
                                value: fvalue,
                                dvalue: dvalue 
                        }
                },
                callback : function(value, settings) { // Reset variables after submission
                        fvalue = '';
                        dvalue = '';
                },
                id: 'field', // the object id is the form field name
                placeholder: '',
                indicator: '<span class="icon-busy" />',
                tooltip: 'Click to edit...',
                select: true
    });


    $('.event-editable').editable('/rule/update', {
        type: 'autocomplete',
        autocomplete: {
                        minLength: 1,
                        source: "/matter/get-all-events",
                        select: function( event, ui ) {
                        this.value = ui.item.value;  // assign event name back to the form element
                                fvalue = ui.item.id; // Event code
                                dvalue = ui.item.value;
                        $(event.target.form).submit(); //submit the form
                        }
        },
        submitdata: function(value, settings){
                        var field_name = $(this).attr('id');
                        return { 
                                rule_id: $('#rule-id').val(), 
                                field: field_name,
                                value: fvalue,
                                dvalue: dvalue 
                        }
                },
                callback : function(value, settings) { // Reset variables after submission
                        fvalue = '';
                        dvalue = '';
                },
                id: 'field', // the object id is the form field name
                placeholder: '',
                indicator: '<span class="icon-busy" />',
                tooltip: 'Click to edit...',
                select: true
    });

    $('.responsible-editable').editable('/rule/update', {
        type: 'autocomplete',
        autocomplete: {
                        minLength: 1,
                        source: "/actor/get-all-logins",
                        select: function( event, ui ) {
                        this.value = ui.item.value;  // assign category name back to the form element
                                fvalue = ui.item.id; // Category code
                                dvalue = ui.item.value;
                        $(event.target.form).submit(); //submit the form
                        }
        },
        submitdata: function(value, settings){
                        var field_name = $(this).attr('id');
                        return { 
                                rule_id: $('#rule-id').val(), 
                                field: field_name,
                                value: fvalue,
                                dvalue: dvalue 
                        }
                },
                callback : function(value, settings) { // Reset variables after submission
                        fvalue = '';
                        dvalue = '';
                },
                id: 'field', // the object id is the form field name
                placeholder: '',
                indicator: '<span class="icon-busy" />',
                tooltip: 'Click to edit...',
                select: true
    });

    $('#event_date').datepicker({
        dateFormat: 'dd/mm/yy',
    });
    $('#event_date').datepicker('setDate', new Date());

    $.editable.addInputType("datepicker", {
        element:  function(settings, original) {
            var input = $("<input type=\"text\" name=\"value\" style==\"width:10px\"/>");
            settings.onblur = function(e) {
            };
            $(this).append(input);
            return(input);
        },
        plugin:  function(settings, original) {
            var form = this;
            $("input", this).filter(":text").datepicker({
                dateFormat: 'dd/mm/yy',
                onSelect: function(dateText) { $(this).hide(); $(form).trigger("submit"); }
            });
        }
    });

    $('.date-editable').editable('/rule/update', {
                submitdata: function(value,settings){
                        var field_name = $(this).attr('id');
                        return { 
                                rule_id: $('#rule-id').val(), 
                                field: field_name 
                        }
                },
                type: 'datepicker',
                select: true,
                indicator : '<span class="icon-busy" />',
                placeholder: '...',
                tooltip: 'Click to edit...',
                callback: function(data) {}
    });

    $('.delete-rule').click(function(){
	    var del_conf = confirm("Deleting Rule from table. Are you sure?");
		if(del_conf == 1){
	    	var aid = $(this).attr('id');
	    	$.ajax({
	      		url: '/rule/delete',
	      		type: 'POST',
	      		data: { aid:aid },
	      		success: function(data){
	        		if(isNaN(parseInt(data)))
	          			alert(data); 
	        		else 
		        		location.reload();     
          		}
			});
		}
	    return false;
	});

    $('.close-button').click(function(){
        $('#rule-details-popup').hide();
        $('#rule-details-used-in').hide();
        $('#facade').hide();
    });
    
    $( "button, input:button" ).button();

});
</script>

<div id="edit-rule-head">
	Rule information <span class="close-button">X</span>
</div>
<div id="edit-rule-content">
	<input type="hidden" name="rule_id" id="rule-id"
		value="<?=$this->rule['rule_id']?>" />
	<fieldset class="rule-info-set">
		<legend>Task rule details - ID: <?=$this->rule['rule_id']?></legend>
		<label for="task" class="required-field" title="<?=$this->ruleComments['task']?>">Task</label> 
		<span class="rule-input-wide task-editable" id="task"><?=htmlentities($this->rule['task_name'])?></span>
                <label for="detail" title="<?=$this->ruleComments['detail']?>">Detail</label>
                <span class="rule-input-narrow editable" id="detail"><?=$this->rule['detail']?></span><BR />
                <label for="for_country" title="<?=$this->ruleComments['for_country']?>">Country</label>
                <span class="rule-input-wide country-editable" id="for_country"><?=$this->rule['country_name']?></span>
                <label for="is_active" title="<?=$this->ruleComments['active']?>">Is active</label>
                <span class="rule-input-narrow opt-editable" id="is_active">
                        <input type="radio" name="is_active" value="1" <?php echo ($this->rule['active'])? 'checked="checked"' : ""; ?> />YES&nbsp;&nbsp;
                        <input type="radio" name="is_active" value="0" <?php echo ($this->rule['active'])? '' :'checked="checked"'; ?> />NO
                </span>
                <label for="for_origin" title="<?=$this->ruleComments['for_origin']?>">Origin</label>
                <span class="rule-input-wide country-editable" id="for_origin"><?=$this->rule['origin_name']?></span>
                <label for="for_category" title="<?=$this->ruleComments['for_category']?>">Category</label>
                <span class="rule-input-narrow category-editable" id="for_category"><?=$this->rule['category_name']?></span>
                <label for="notes" title="<?=$this->ruleComments['notes']?>">Notes</label>
                <span class="rule-input-wide teditable" id="notes"><?=$this->rule['notes']?></span>
		<label for="for_type" title="<?=$this->ruleComments['for_type']?>">Type</label>
		<span class="rule-input-narrow type-editable" id="for_type"><?=$this->rule['for_type_name']?></span>
        </fieldset>
        <fieldset class="rule-info-set">
                <legend>Rule details</legend>
                <label for="trigger_event" title="<?=$this->ruleComments['trigger_event']?>">Trigger event</label>
                <span class="rule-input-wide event-editable" id="trigger_event"><?=$this->rule['trigger_event_name']?></span>
                <label for="use_parent" title="<?=$this->ruleComments['use_parent']?>">Use parent</label>
                <span class="rule-input-narrow opt-editable" id="use_parent">
                        <input type="radio" name="use_parent" value="1" <?php echo ($this->rule['use_parent'])? 'checked="checked"' : ""; ?> />YES&nbsp;&nbsp;
                        <input type="radio" name="use_parent" value="0" <?php echo ($this->rule['use_parent'])? '' :'checked="checked"'; ?> />NO
                </span>
                <label for="use_before" title="<?=$this->ruleComments['use_before']?>">Use before</label>
                <span class="rule-input-wide date-editable" id="use_before"><?= ($this->rule['use_before'] != "") ? date_format(date_create($this->rule['use_before']),"d/m/Y"): "..."?></span>
                <label for="clear_task" title="<?=$this->ruleComments['clear_task']?>">Clear task</label> 
                <span class="rule-input-narrow opt-editable" id="clear_task">
                        <input type="radio" name="clear_task" value="1" <?php echo ($this->rule['clear_task'])? 'checked="checked"' : ""; ?> />YES&nbsp;&nbsp;
                        <input type="radio" name="clear_task" value="0" <?php echo ($this->rule['clear_task'])? '' :'checked="checked"'; ?> />NO
                </span>
                <label for="use_after" title="<?=$this->ruleComments['use_after']?>">Use after</label>
                <span class="rule-input-wide date-editable" id="use_after"><?= ($this->rule['use_before'] != "") ? date_format(date_create($this->rule['use_after']),"d/m/Y") : "..."?></span>
		<label for="delete_task" title="<?=$this->ruleComments['delete_task']?>">Delete task</label> 
                <span class="rule-input-narrow opt-editable" id="delete_task">
                        <input type="radio" name="delete_task" value="1" <?php echo ($this->rule['delete_task'])? 'checked="checked"' : ""; ?> />YES&nbsp;&nbsp;
                        <input type="radio" name="delete_task" value="0" <?php echo ($this->rule['delete_task'])? '' :'checked="checked"'; ?> />NO
                </span>
                <label for="condition_event" title="<?=$this->ruleComments['condition_event']?>">Condition event</label>
                <span class="rule-input-wide auto-editable" id="condition_event"><?=htmlentities($this->rule['condition_event_name'])?></span>
                <label for="use_priority" title="<?=$this->ruleComments['use_priority']?>">Use priority</label>
                <span class="rule-input-narrow opt-editable" id="use_priority">
                        <input type="radio" name="use_priority" value="1" <?php echo ($this->rule['use_priority'])? 'checked="checked"' : ""; ?> />YES&nbsp;&nbsp;
                        <input type="radio" name="use_priority" value="0" <?php echo ($this->rule['use_priority'])? '' :'checked="checked"'; ?> />NO
                </span>
                <label for="abort_on" title="<?=$this->ruleComments['abort_on']?>">Abort on</label>
                <span class="rule-input-wide event-editable" id="abort_on"><?=$this->rule['abort_on_name']?></span>
                <label for="responsible" title="<?=$this->ruleComments['responsible']?>">Responsible</label>
                <span class="rule-input-narrow responsible-editable" id="responsible"><?=$this->rule['responsible_name']?></span>
                <label for="days" title="<?=$this->ruleComments['days']?>">Days</label>
                <span class="rule-input-wide editable" id="days"><?=$this->rule['days']?></span>
                <label for="cost" title="<?=$this->ruleComments['cost']?>">Cost</label> 
                <span class="rule-input-narrow editable" id="cost"><?=$this->rule['cost']?></span>
                <label for="months" title="<?=$this->ruleComments['months']?>">Months</label>
                <span class="rule-input-wide editable" id="months"><?=$this->rule['months']?></span>
                <label for="fee" title="<?=$this->ruleComments['fee']?>">Fee</label> 
                <span class="rule-input-narrow editable" id="fee"><?=$this->rule['fee']?></span>
                <label for="years" title="<?=$this->ruleComments['years']?>">Years</label>
                <span class="rule-input-wide editable" id="years"><?=$this->rule['years']?></span>
                <label for="currency" title="<?=$this->ruleComments['currency']?>">Currency</label>
                <span class="rule-input-narrow editable" id="currency"><?=$this->rule['currency']?></span>
                <label for="end_of_month" title="<?=$this->ruleComments['end_of_month']?>">End of month</label>
                <span class="rule-input-narrow opt-editable" id="end_of_month">
                        <input type="radio" name="end_of_month" value="1" <?php echo ($this->rule['end_of_month'])? 'checked="checked"' : ""; ?> />YES&nbsp;&nbsp;
                        <input type="radio" name="end_of_month" value="0" <?php echo ($this->rule['end_of_month'])? '' :'checked="checked"'; ?> />NO
                </span>
		<button title="Delete rule" class="delete-rule" id="<?=$this->rule['rule_id']?>" style="float: right; margin-top: 10px; margin-right: 16px;">
			<span class="ui-icon ui-icon-trash" style="float: left;"></span>
			Delete
		</button>
	</fieldset>

	<input type="hidden" value="" id="country-code" name="country-code" /> 
	
</div>
