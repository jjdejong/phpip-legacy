<style type="text/css">
#add-rule-content {
	width: 99%;
	background: #FFF;
	display: block;
	border: 1px inset #888;
	padding: 5px;
}

#add-rule-content label {
	display: inline-block;
	text-align: left;
	width: 100px;
	margin: 0px 5px 5px 5px;
	vertical-align: top;
}

.actor-input {
	width: 170px;
	border: 1px inset #888;
	padding: 1px 2px;
	vertical-align: top;
	margin-bottom: 2px;
}

.close-button {
	background: #f00;
	float: right;
	padding: 2px 4px 0px;
	cursor: pointer;
	font-family: arial;
}

#add-rule-head {
	display: block;
	width: 99%;
	background: #1E4262;
	color: #FFF;
	padding: 5px;
	border: 1px solid #1E4262;
}

.validation-errors {
	color: #F00;
	padding: 5px;
}

#valid-error {
	display: block;
	margin: 0px 0px 5px 10px;
}

.rule-info-set {
	background: #EFEFEF;
	border: 1px inset #888;
}
</style>

<script type="text/javascript">
$(document).ready(function(){
    $('#task_name').autocomplete({
        minLength: 1,
        source: "/rule/get-task-names",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#task_name" ).val( ui.item.value );
            $( "#task" ).val( ui.item.id );
              return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#task" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });

    $('#for_country_name').autocomplete({
        minLength: 1,
        source: "/matter/get-country-codes",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#for_country_name" ).val( ui.item.value );
            $( "#for_country" ).val( ui.item.id );
              return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#for_country" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });
    $('#for_origin_name').autocomplete({
        minLength: 1,
        source: "/matter/get-country-codes",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#for_origin_name" ).val( ui.item.value );
            $( "#for_origin" ).val( ui.item.id );
              return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#for_origin" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });
    $('#for_category_name').autocomplete({
        minLength: 1,
        source: "/matter/get-all-categories",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#for_category_name" ).val( ui.item.value );
            $( "#for_category" ).val( ui.item.id );
              return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#for_category" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });

    $('#for_type_name').autocomplete({
        minLength: 1,
        source: "/matter/get-matter-types",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#for_type_name" ).val( ui.item.value );
            $( "#for_type" ).val( ui.item.id );
                return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#for_type" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });


    $('#trigger_event_name').autocomplete({
        minLength: 1,
        source: "/matter/get-all-events",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#trigger_event_name" ).val( ui.item.value );
            $( "#trigger_event" ).val( ui.item.id );
                return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#trigger_event" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });

    $('#condition_event_name').autocomplete({
        minLength: 1,
        source: "/matter/get-all-events",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#condition_event_name" ).val( ui.item.value );
            $( "#condition_event" ).val( ui.item.id );
                return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#condition_event" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });


    $('#abort_on_name').autocomplete({
        minLength: 1,
        source: "/matter/get-all-tasks",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#abort_on_name" ).val( ui.item.value );
            $( "#abort_on" ).val( ui.item.id );
                return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#abort_on" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });
    $('#responsible_name').autocomplete({
        minLength: 1,
        source: "/actor/get-all-logins",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#responsible_name" ).val( ui.item.value );
            $( "#responsible" ).val( ui.item.id );
                return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $( "#responsible" ).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });

    $('#use_after').datepicker({
        dateFormat: 'dd/mm/yy',
    });
    $('use_after').datepicker('setDate', new Date());

    $('use_before').datepicker({
        dateFormat: 'dd/mm/yy',
    });
    $('use_before').datepicker('setDate', new Date());

    $('.close-button').click(function(){
        $('#rule-details-popup').css('display', 'none');
    });

    $('#add-rule-cancel').click(function(){
        $('#rule-details-popup').css('display', 'none');
    });

    $('#add-rule-submit').click(function(){
        $('#facade').css('height',$(document).height());
        $('#facade').css('display','block');
        $.ajax({
            url: '/rule/add',
            type: 'POST',
            data: { active: $('input[name=active]').val(),
                    task_name: $('#task_name').val(), 
                    task: $('#task').val(), 
                    trigger_event_name: $('#trigger_event_name').val(), 
                    trigger_event: $('#trigger_event').val(), 
                    clear_task: $('input[name=clear_task').val(), 
                    delete_task: $('input[name=delete_task').val(), 
                    for_category_name: $('#for_category_name').val(), 
                    for_category: $('#for_category').val(), 
                    for_country: $('#for_country').val(), 
                    for_country_name: $('#for_country_name').val(), 
                    for_origin: $('#for_origin').val(),
                    for_origin_name: $('#for_origin_name').val(),
                    for_type_name: $('#for_type_name').val(), 
                    for_type: $('#for_type').val(), 
                    detail: $('#detail').val(), 
                    days: $('#days').val(), 
                    months: $('#months').val(),
                    years: $('#years').val(),
                    recurring: $('input[name=recurring').val(),
                    end_of_month: $('input[name=end_of_month').val(), 
                    abort_on_name: $('#abort_on_name').val(), 
                    abort_on: $('#abort_on').val(), 
                    condition_event_name: $('#condition_event_name').val(), 
                    condition_event: $('#condition_event').val(), 
                    use_parent: $('input[name=use_parent').val(), 
                    use_priority: $('input[name=use_priority').val(), 
                    use_after: $('#use_after').val(),   
                    use_before: $('#use_before').val(),   
                    cost: $('#cost').val(),    
                    fee: $('#fee').val(),
                    currency: $('#currency').val(),
                    responsible_name: $('#responsible_name').val(),  
                    responsible: $('#responsible').val(),  
                    notes: $('#notes').val()
                  },
            success: function(response, status, xhr){
                if(response.length < 100){
                    var resObj = $.parseJSON(''+response);
                    $( "#rule" ).val( resObj.rule_name );
                    $( "#rule-id" ).val( resObj.rule_id );
                    $('#rule-details-popup').css('display', 'none');
                }else{
                    $('#rule-details-popup').html(response);
                }
                $('#facade').css('display','none');
            }
        });
    });
    $('#task').val($('#task').val().toUpperCase());
    $("input:button").button();
});
</script>

<div id="add-rule-head">
	Create Rule <span class="close-button">X</span>
</div>
<div id="add-rule-content">
	<?php
	if(isset($this->formErrors)){ 
		?>
	<div class="validation-errors">
		<?php	
		foreach ( $this->formErrors as $key => $value ) {
			echo '<div class="valid-error">* ' . $key . ' - ' . $value ['isEmpty'] . '</div>';
		}
		?>
	</div>
	<?php 
	} 
	if(isset($this->sqlErrors)){
		?>
	<div class="validation-errors">
		<?=$this->sqlErrors;?>
	</div>
	<?php 
	} 
	?>
<form id="add-rule-form" method="post" action="" accept-charset="utf-8">
	<fieldset class="rule-info-set">
		<legend>Rule details</legend>
		<label for="task" title="<?=$this->ruleComments['task']?>"><b>Task</b></label>
			<?=$this->ruleForm->getElement('task_name')?>
                <label for="detail" title="<?=$this->ruleComments['detail']?>">Detail</label>
                        <?=$this->ruleForm->getElement('detail')?>
                <label for="for_country_name" title="<?=$this->ruleComments['for_country']?>">Country</label>
                        <?=$this->ruleForm->getElement('for_country_name')?>
                <label title="<?=$this->ruleComments['active']?>">Is active</label>
                        <?=$this->ruleForm->getElement('active')?>
                <label for="for_category_name" title="<?=$this->ruleComments['for_category']?>">Category</label>
                        <?=$this->ruleForm->getElement('for_category_name')?>
                <label for="for_origin_name" title="<?=$this->ruleComments['for_origin']?>">Origin</label>
                        <?=$this->ruleForm->getElement('for_origin_name')?>
                <label for="for_type_name" title="<?=$this->ruleComments['for_type']?>">Type</label>
                        <?=$this->ruleForm->getElement('for_type_name')?>
                <label for="notes" title="<?=$this->ruleComments['notes']?>">Notes</label>
                        <?=$this->ruleForm->getElement('notes')?>
	</fieldset>
	<fieldset class="rule-info-set">
               <legend>Rule details</legend>
                <label for="trigger_event_name" title="<?=$this->ruleComments['trigger_event']?>"><b>Trigger event</b></label>
                        <?=$this->ruleForm->getElement('trigger_event_name')?>
                 <label for="use_parent" title="<?=$this->ruleComments['use_parent']?>">Use parent</label>
                        <?=$this->ruleForm->getElement('use_parent')?>
                <label for="use_before" title="<?=$this->ruleComments['use_before']?>">Use before</label>
                        <?=$this->ruleForm->getElement('use_before')?>
                <label for="clear_task" title="<?=$this->ruleComments['clear_task']?>">Clear task</label> 
                        <?=$this->ruleForm->getElement('clear_task')?>
                <label for="use_after" title="<?=$this->ruleComments['use_after']?>">Use after</label>
                        <?=$this->ruleForm->getElement('use_after')?>
                <label for="delete_task" title="<?=$this->ruleComments['delete_task']?>">Delete task</label> 
                        <?=$this->ruleForm->getElement('delete_task')?>
                <label for="condition_event_name" title="<?=$this->ruleComments['condition_event']?>">Condition event</label>
                        <?=$this->ruleForm->getElement('condition_event_name')?>
                <label for="use_priority" title="<?=$this->ruleComments['use_priority']?>">Use priority</label>
                        <?=$this->ruleForm->getElement('use_priority')?>
                <label for="abort_on" title="<?=$this->ruleComments['abort_on']?>">Abort on</label>
                        <?=$this->ruleForm->getElement('abort_on_name')?>
                <label for="responsible_name" title="<?=$this->ruleComments['responsible']?>">Responsible</label>
                        <?=$this->ruleForm->getElement('responsible_name')?>
                <label for="days" title="<?=$this->ruleComments['days']?>">Days</label>
                        <?=$this->ruleForm->getElement('days')?>
                <label for="cost" title="<?=$this->ruleComments['cost']?>">Cost</label> 
                        <?=$this->ruleForm->getElement('cost')?>
                <label for="months" title="<?=$this->ruleComments['months']?>">Months</label>
                        <?=$this->ruleForm->getElement('months')?>
                <label for="fee" title="<?=$this->ruleComments['fee']?>">Fee</label> 
                        <?=$this->ruleForm->getElement('fee')?>
                <label for="years" title="<?=$this->ruleComments['years']?>">Years</label>
                        <?=$this->ruleForm->getElement('years')?>
                <label for="currency" title="<?=$this->ruleComments['currency']?>">Currency</label>
                        <?=$this->ruleForm->getElement('currency')?>
                <label for="end_of_month" title="<?=$this->ruleComments['end_of_month']?>">End of month</label>
                        <?=$this->ruleForm->getElement('end_of_month')?>
	</fieldset>
                <input type="hidden" 
                        value="" 
                        id="task" 
                        name="task" /> 
                <input type="hidden" 
                        value="" 
                        id="for_country" 
                        name="for_country" /> 
                <input type="hidden" 
                        value="" 
                        id="for_category" 
                        name="for_category" /> 
                <input type="hidden" 
                        value="" 
                        id="for_origin" 
                        name="for_origin" /> 
                <input type="hidden" 
                        value="" 
                        id="for_type" 
                        name="for_type" /> 
                <input type="hidden" 
                        value="" 
                        id="trigger_event" 
                        name="trigger_event" /> 
                <input type="hidden" 
                        value="" 
                        id="condition_event" 
                        name="condition_event" /> 
                <input type="hidden" 
                        value="" 
                        id="abort_on" 
                        name="abort_on" /> 
                <input type="hidden" 
                        value="" 
                        id="responsible" 
                        name="responsible" /> 

		<div style="text-align: center; margin-top: 5px;">
			<input type="button" 
				value="Create" 
				name="add-rule-submit"
				id="add-rule-submit" /> 
			<input type="button" 
				value="Cancel"
				name="add-rule-cancel" 
				id="add-rule-cancel" />
		</div>
	</form>
</div>
