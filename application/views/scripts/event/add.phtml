<style type="text/css">
#add-event-content {
	width: 99%;
	background: #FFF;
	display: block;
	border: 1px inset #888;
	padding: 5px;
}

#add-event-content label {
	display: inline-block;
	text-align: left;
	width: 120px;
	margin: 0px 5px 5px 5px;
	vertical-align: top;
}

.actor-input {
	width: 170px;
	border: 1px inset #888;
	padding: 1px 2px;
	vertical-align: top;
	margin-bottom: 2px;
}

.close-button {
	background: #f00;
	float: right;
	padding: 2px 4px 0px;
	cursor: pointer;
	font-family: arial;
}

#add-event-head {
	display: block;
	width: 99%;
	background: #1E4262;
	color: #FFF;
	padding: 5px;
	border: 1px solid #1E4262;
}

.validation-errors {
	color: #F00;
	padding: 5px;
}

#valid-error {
	display: block;
	margin: 0px 0px 5px 10px;
}

.event-info-set {
	background: #EFEFEF;
	border: 1px inset #888;
}
</style>

<script type="text/javascript">
$(document).ready(function(){

    $('#default_responsible').autocomplete({
        minLength: 1,
        source: "/actor/get-all-logins",
        focus: function( event, ui ) {
            return false;
        },
        autoFocus: true,
        select: function( event, ui ) {
            $( "#default_responsible" ).val( ui.item.value );
                return false;
        },
        change: function( event, ui ){
            valid=true;
            if ( !ui.item ) {
                valid=false;
            }
            if ( !valid ) {
                // remove invalid value, as it didn't match anything
                $(this).val( "" );
                $(this).data( "autocomplete" ).term = "";
                return false;
            }
            return false;
        }
    });


    $('.close-button').click(function(){
        $('#event-details-popup').css('display', 'none');
    });

    $('#add-event-cancel').click(function(){
        $('#event-details-popup').css('display', 'none');
    });

    $('#add-event-submit').click(function(){
        $('#facade').css('height',$(document).height());
        $('#facade').css('display','block');
        $.ajax({
            url: '/event/add',
            type: 'POST',
            data: { code: $('#code').val(), 
                    name: $('#name').val(), 
                    is_task: $('input[name=is_task]:checked').val(), 
                    status_event: $('input[name=status_event]:checked').val(), 
                    unique: $('input[name=unique]:checked').val(), 
                    default_responsible: $('#default_responsible').val(), 
                    use_matter_resp: $('input[name=use_matter_resp]:checked').val(), 
                    uqtrigger: $('input[name=uqtrigger]:checked').val(), 
                    killer: $('input[name=killer]:checked').val(), 
                    notes: $('#notes').val()
                  },
            success: function(response, status, xhr){
                if(response.length < 100){
                    var resObj = $.parseJSON(''+response);
                    $( "#event-id" ).val( resObj.event_id );
                    $('#event-details-popup').css('display', 'none');
                }else{
                    $('#event-details-popup').html(response);
                }
                $('#facade').css('display','none');
            }
        });
    });
    $("input:button").button();
});
</script>

<div id="add-event-head">
	Create Event name <span class="close-button">X</span>
</div>
<div id="add-event-content">
	<?php
	if(isset($this->formErrors)){ 
		?>
	<div class="validation-errors">
		<?php	
		foreach ( $this->formErrors as $key => $value ) {
			echo '<div class="valid-error">* ' . $key . ' - ' . $value ['isEmpty'] . '</div>';
		}
		?>
	</div>
	<?php 
	} 
	if(isset($this->sqlErrors)){
		?>
	<div class="validation-errors">
		<?=$this->sqlErrors;?>
	</div>
	<?php 
	} 
	?>
<form id="add-event-form" method="post" action="" accept-charset="utf-8">
	<fieldset class="event-info-set">
		<legend>Event name details</legend>
		<label for="code" title="<?=$this->eventComments['code']?>"><b>Code</b></label>
			<?=$this->eventForm->getElement('code')?>
                <label for="is_task" title="<?=$this->eventComments['is_task']?>">Is task</label>
                        <?=$this->eventForm->getElement('is_task')?>
                <label for="name" title="<?=$this->eventComments['name']?>">Name</label>
                        <?=$this->eventForm->getElement('name')?>
                <label title="<?=$this->eventComments['status_event']?>">Is status event</label>
                        <?=$this->eventForm->getElement('status_event')?>
                <label for="default_responsible" title="<?=$this->eventComments['default_responsible']?>">Default responsible</label>
                        <?=$this->eventForm->getElement('default_responsible')?>
                <label for="use_matter_resp" title="<?=$this->eventComments['use_matter_resp']?>">Use matter responsible</label>
                        <?=$this->eventForm->getElement('use_matter_resp')?>
                <label for="unique" title="<?=$this->eventComments['unique']?>">Is unique</label> 
                        <?=$this->eventForm->getElement('unique')?>
                <label for="uqtrigger" title="<?=$this->eventComments['uqtrigger']?>">Unique trigger</label>
                        <?=$this->eventForm->getElement('uqtrigger')?>
                <label for="killer" title="<?=$this->eventComments['killer']?>">Is killer</label>
                        <?=$this->eventForm->getElement('killer')?>
                <label for="notes" title="<?=$this->eventComments['notes']?>">Notes</label>
                        <?=$this->eventForm->getElement('notes')?>
	</fieldset>
		<div style="text-align: center; margin-top: 5px;">
			<input type="button" 
				value="Create" 
				name="add-event-submit"
				id="add-event-submit" /> 
			<input type="button" 
				value="Cancel"
				name="add-event-cancel" 
				id="add-event-cancel" />
		</div>
	</form>
</div>
